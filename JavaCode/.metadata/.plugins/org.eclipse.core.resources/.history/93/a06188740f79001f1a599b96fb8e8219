package cs523.producer;

public class BitcoinPrice {

    private String assetId;        // Asset identifier (e.g., BTC for Bitcoin)
    private double price;          // Current price of Bitcoin in a specific currency
    private String currency;       // Currency against which Bitcoin is measured (e.g., USD)
    private String timestamp;      // Timestamp of the price data
    private double volume;         // Trading volume in the last 24 hours
    private double marketCap;      // Market capitalization of Bitcoin
    private double high24h;        // Highest price in the last 24 hours
    private double low24h;         // Lowest price in the last 24 hours

    public String getAssetId() {
        return assetId;
    }

    public void setAssetId(String assetId) {
        this.assetId = assetId;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public String getCurrency() {
        return currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public String getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(String timestamp) {
        this.timestamp = timestamp;
    }

    public double getVolume() {
        return volume;
    }

    public void setVolume(double volume) {
        this.volume = volume;
    }

    public double getMarketCap() {
        return marketCap;
    }

    public void setMarketCap(double marketCap) {
        this.marketCap = marketCap;
    }

    public double getHigh24h() {
        return high24h;
    }

    public void setHigh24h(double high24h) {
        this.high24h = high24h;
    }

    public double getLow24h() {
        return low24h;
    }

    public void setLow24h(double low24h) {
        this.low24h = low24h;
    }

    @Override
    public String toString() {
        return "BitcoinPrice [assetId=" + assetId + ", price=" + price + ", currency=" + currency
                + ", timestamp=" + timestamp + ", volume=" + volume + ", marketCap=" + marketCap
                + ", high24h=" + high24h + ", low24h=" + low24h + "]";
    }

}

